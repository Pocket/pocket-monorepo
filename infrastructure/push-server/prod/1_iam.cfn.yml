AWSTemplateFormatVersion: 2010-09-09
Description: Web Deployment Service - Deploys Web Code to ECS
Parameters:
  App:
    Type: String
    AllowedValues:
      - Push
    Default: Push

  Env:
    Type: String
    AllowedValues:
      - Prod
      - Dev
      - Stage
      - Feature

  SecretsManagerKMSKeyArn:
    Type: String

Resources:
  # global role
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${App}${Env}TaskRole"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        # fallback parameter store
        - PolicyName: !Sub "${App}TaskPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParametersByPath
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}/${Env}"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}/${Env}/*"
        - PolicyName: !Sub "${App}${Env}SQSPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:*
                Resource:
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:pocket-push-queue"
                  - !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:pocket-push-feedback-queue"

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${App}${Env}TaskExecutionRole"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        # fallback parameter store
        - PolicyName: !Sub "${App}TaskExecutionPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - kms:Decrypt
                Resource:
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:Shared"
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:Shared/*"
                  - !Sub '${SecretsManagerKMSKeyArn}'

  ServiceAutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${App}${Env}AutoScaleRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub "${App}${Env}Autoscaling"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - application-autoscaling:*
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - ecs:DescribeServices
                  - ecs:UpdateService
                Resource: "*"

Outputs:
  TaskRoleArn:
    Value: !GetAtt TaskRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-TaskRoleArn"
  TaskExecutionRoleArn:
    Value: !GetAtt TaskExecutionRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-TaskExecutionRoleArn"
  ServiceAutoScalingRole:
    Value: !GetAtt ServiceAutoScalingRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ServiceAutoScalingRoleArn"
