extend schema
 @link(url: "https://specs.apollo.dev/federation/v2.6", import: ["@key", "@requiresScopes", "@requires", "@shareable", "@composeDirective"])
 @link(url: "https://myspecs.dev/myDirective/v1.0", import: ["@constraint"])
 @composeDirective(name: "@constraint")

scalar ISOString
scalar ValidUrl
scalar Markdown

"""
A Note is an entity which may contain extracted components
from websites (clippings/snippets), user-generated rich text content,
and may be linked to a source url.
"""
type Note @key(fields: "id") {
  """
  This Note's identifier
  """
  id: ID!
  """
  Title of this note
  """
  title: String
  """
  JSON representation of a ProseMirror document
  """
  docContent: String
  """
  Markdown preview of the note content for summary view.
  """
  contentPreview: Markdown
  """
  When this note was created
  """
  createdAt: ISOString!
  """
  When this note was last updated
  """
  updatedAt: ISOString!
  """
  The SavedItem entity this note is attached to (either directly
  or via a Clipping, if applicable)
  """
  savedItem: SavedItem
  """
  The URL this entity was created from (either directly or via
  a Clipping, if applicable).
  """
  source: ValidUrl
  """
  Whether this Note has been marked as archived (hide from default view).
  """
  archived: Boolean!
  """
  Whether this Note has been marked for deletion (will be eventually
  removed from the server). Clients should delete Notes from their local
  storage if this value is true.
  """
  deleted: Boolean!
}

type SavedItem @key(fields: "url") {
  """The URL of the SavedItem"""
  url: String!
}

type Query {
  """Retrieve a specific Note"""
  note(id: ID!): Note @requiresScopes(scopes: [["ROLE_USER"]])
}


"""
Input to create a new Note
"""
input CreateNoteInput {
  """Optional title for this Note"""
  title: String
  """
  Client-provided UUID for the new Note.
  If not provided, will be generated on the server.
  """
  id: ID
  """
  Optional URL to link this Note to.
  """
  source: ValidUrl
  """
  JSON representation of a ProseMirror document
  """
  docContent: String!
  """
  When this note was created. If not provided, defaults to server time upon
  receiving request.
  """
  createdAt: ISOString
}


type Mutation {
  """
  Create a new note, optionally with title and content
  """
  createNote(input: CreateNoteInput!): Note! @requiresScopes(scopes: [["ROLE_USER"]])
}