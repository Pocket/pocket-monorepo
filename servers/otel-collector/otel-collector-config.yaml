# Note this is only built nightly and will take effect on the next deploy after being built.
receivers:
  otlp:
    protocols:
      # Disabling GRPC until we take the time to do it in a good way in our AWS environment. (Mainly we need to update our TF Modules to support it and create a proxy that has a health check for the ALB, theres a few github issues on OTELs repo for this.)
      # grpc:
      #   endpoint: "0.0.0.0:4317" # gRPC port for receiving traces, metrics, and logs over gRPC
      http:
        endpoint: "localhost:4318" # http port for receiving traces, metrics, and logs over http

extensions:
  health_check:
    endpoint: localhost:13133
   


exporters:
  googlecloud:
    log:
      default_log_name: opentelemetry.io/collector-exported-log
  # debug:
  #   verbosity: detailed
processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 30
    spike_limit_percentage: 10
  batch:
    # batch metrics before sending to reduce API usage
    send_batch_max_size: 10100
    send_batch_size: 10000
    timeout: 5s
  resourcedetection/ecs:
      detectors: [env, ecs]
      timeout: 2s
      # Ensures that anything coming from the ECS detector in code will not override any existing attributes.
      # Otherwise, note, that the ECS detector will be that of where the collector is running, not the service.
      override: false
  resource/cleanup_for_google:
    attributes:
      - key: service.namespace
        value: pocket
        action: insert
      # We must set the region to us-east1, as the google exporter uses this to know where to send data to.
      - key: cloud.region
        value: us-east1
        action: upsert
      - key: cloud.availability_zone
        value: us-east1-b
        action: upsert
      # set this to the ecs task id
      - key: host.id
        from_attribute: aws.ecs.task.id
        action: upsert
      # https://opentelemetry.io/docs/specs/semconv/resource/deployment-environment/
      - key: deployment.environment.name
        value: ${env:DEPLOYMENT_ENVIRONMENT_NAME}
        action: upsert

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resourcedetection/ecs, resource/cleanup_for_google, memory_limiter, batch]
      exporters: [debug]
    metrics:
      receivers: [otlp]
      processors: [resourcedetection/ecs, resource/cleanup_for_google, memory_limiter, batch]
      exporters: [googlecloud]
    logs:
      receivers: [otlp]
      processors: [resourcedetection/ecs, resource/cleanup_for_google, memory_limiter, batch]
      exporters: [debug]