import { IntMask } from './intMask';

const testConfig = {
  characterMap: new Map([
    ['G', 0],
    ['Q', 0],
    ['k', 0],
    ['V', 0],
    ['X', 0],
    ['I', 0],
    ['W', 1],
    ['Y', 1],
    ['a', 1],
    ['j', 1],
    ['Z', 1],
    ['o', 1],
    ['C', 2],
    ['D', 2],
    ['Q', 2],
    ['U', 2],
    ['Z', 2],
    ['d', 3],
    ['C', 3],
    ['f', 3],
    ['g', 3],
    ['w', 3],
    ['V', 4],
    ['k', 4],
    ['n', 4],
    ['J', 4],
    ['p', 4],
    ['H', 5],
    ['Q', 5],
    ['R', 5],
    ['t', 5],
    ['x', 5],
    ['w', 6],
    ['K', 6],
    ['J', 6],
    ['P', 6],
    ['G', 6],
    ['U', 7],
    ['q', 7],
    ['Y', 7],
    ['V', 7],
    ['W', 7],
    ['H', 8],
    ['M', 8],
    ['O', 8],
    ['N', 8],
    ['I', 8],
    ['Y', 9],
    ['i', 9],
    ['o', 9],
    ['Q', 9],
    ['l', 9],
  ]),
  positionMap: new Map([
    [9, 0],
    [123, 2],
    [26, 2],
    [123, 3],
    [9, 4],
    [56, 5],
    [234, 6],
    [24, 7],
    [45, 8],
    [98, 9],
    [45, 10],
    [12, 11],
    [98, 12],
    [32, 13],
    [74, 14],
    [25, 15],
  ]),
  md5Randomizer: new Map([
    ['0', ['g']],
    ['1', ['g']],
    ['2', ['h']],
    ['3', ['a']],
    ['4', ['a']],
    ['5', ['3']],
    ['6', ['1']],
    ['7', ['1']],
    ['8', ['7']],
    ['9', ['k']],
    ['a', ['v']],
    ['b', ['X']],
    ['c', ['i']],
    ['d', ['f', 'T', 'q']],
    ['e', ['o']],
    ['f', ['O', 'h', 'b']],
  ]),
  letterIndex: new Map([
    ['a', 7],
    ['b', 2],
    ['c', 8],
    ['d', 9],
    ['e', 1],
    ['f', 0],
    ['0', 9],
  ]),
  salt1: '123asdf',
  salt2: 'asdaa47',
};

describe('intMask', () => {
  it.each([
    {
      input: 123455,
      expected: '50b91cc7fR2aa6029ff5fo2jc4d6eab054b12e663fabbq2fg86t8e76dd3g',
    },
    {
      input: 2342344234,
      expected: '07ae3c894pfa4fv11d0d3ebZ40624ad24180511eec4ba8a30dcCac1e787dn',
    },
  ])('encodes', ({ input, expected }) => {
    expect(IntMask.encode(input, testConfig)).toBe(expected);
  });
});
