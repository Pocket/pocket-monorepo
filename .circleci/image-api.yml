
workflows:
  image-api:
    jobs:
      - test_integrations:
          <<: *not_main
          context: pocket
          name: image-api_test_integrations
          scope: image-api

      - pocket/apollo:
          name: image-api_apollo
          fed_graph_name: pocket-client-api
          graph_name: image-api
          prod_graph_url: https://image-api.readitlater.com
          dev_graph_url: https://image-api.getpocket.dev
          current_branch: << pipeline.git.branch >>

      - pocket/apollo:
          name: image-api_apollo_admin
          fed_graph_name: pocket-admin-api
          graph_name: image-api
          prod_graph_url: https://image-api.readitlater.com
          dev_graph_url: https://image-api.getpocket.dev
          current_branch: << pipeline.git.branch >>
          apollo_key_env: APOLLO_ADMIN_KEY

      # Try building the ECS docker image on each branch
      - build_image:
          <<: *not_dev_main
          context: pocket
          name: image-api_build_docker
          aws-access-key-id: Dev_AWS_ACCESS_KEY
          aws-secret-access-key: Dev_AWS_SECRET_ACCESS_KEY
          aws-region: Dev_AWS_DEFAULT_REGION
          repo-name: imageapi-dev-app
          ecr-url: 410318598490.dkr.ecr.us-east-1.amazonaws.com
          push: false
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=image-api --build-arg APP_PATH=servers/image-api --build-arg SENTRY_AUTH_TOKEN=${SENTRY_BEARER} --build-arg SENTRY_ORG=pocket --build-arg SENTRY_PROJECT=image-api 

      # Build & Deploy the Dev Docker Image
      - build_image:
          <<: *only_dev
          context: pocket
          name: image-api_build_docker_dev
          aws-access-key-id: Dev_AWS_ACCESS_KEY
          aws-secret-access-key: Dev_AWS_SECRET_ACCESS_KEY
          aws-region: Dev_AWS_DEFAULT_REGION
          codebuild-project-name: ImageAPI-Dev
          codebuild-project-branch: dev
          repo-name: imageapi-dev-app
          ecr-url: 410318598490.dkr.ecr.us-east-1.amazonaws.com
          push: true
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=image-api --build-arg APP_PATH=servers/image-api --build-arg SENTRY_AUTH_TOKEN=${SENTRY_BEARER} --build-arg SENTRY_ORG=pocket --build-arg SENTRY_PROJECT=image-api 

      # Dev
      - pocket/execute_codepipeline:
          <<: *only_dev
          context: pocket
          name: image-api_deploy_dev
          environment: Dev
          aws-access-key-id: Dev_AWS_ACCESS_KEY
          aws-secret-access-key: Dev_AWS_SECRET_ACCESS_KEY
          aws-region: Dev_AWS_DEFAULT_REGION
          codepipeline-name: ImageAPI-Dev-CodePipeline
          codebuild-project-name: ImageAPI-Dev
          codebuild-project-branch: dev
          requires:
            - image-api_build_docker_dev

      # Build & Deploy the Prod Docker Image
      - build_image:
          <<: *only_main
          context: pocket
          name: image-api_build_docker_prod
          aws-access-key-id: Prod_AWS_ACCESS_KEY
          aws-secret-access-key: Prod_AWS_SECRET_ACCESS_KEY
          aws-region: Prod_AWS_DEFAULT_REGION
          codebuild-project-name: ImageAPI-Prod
          codebuild-project-branch: main
          repo-name: imageapi-prod-app
          ecr-url: 996905175585.dkr.ecr.us-east-1.amazonaws.com
          push: true
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=image-api --build-arg APP_PATH=servers/image-api --build-arg SENTRY_AUTH_TOKEN=${SENTRY_BEARER} --build-arg SENTRY_ORG=pocket --build-arg SENTRY_PROJECT=image-api 

      # Prod
      - pocket/execute_codepipeline:
          <<: *only_main
          context: pocket
          name: image-api_deploy_prod
          environment: Prod
          aws-access-key-id: Prod_AWS_ACCESS_KEY
          aws-secret-access-key: Prod_AWS_SECRET_ACCESS_KEY
          aws-region: Prod_AWS_DEFAULT_REGION
          codepipeline-name: ImageAPI-Prod-CodePipeline
          codebuild-project-name: ImageAPI-Prod
          codebuild-project-branch: main
          requires:
            - image-api_build_docker_prod

      # Prod
      - pocket/setup_deploy_params:
          <<: *only_main
          name: image-api_setup-deploy-params-prod
          aws_access_key_id: Prod_AWS_ACCESS_KEY
          aws_secret_access_key: Prod_AWS_SECRET_ACCESS_KEY
          context: pocket
          env: Prod
          service_name: ImageAPI

      # Dev
      - pocket/setup_deploy_params:
          <<: *only_dev
          name: image-api_setup-deploy-params-dev
          aws_access_key_id: Dev_AWS_ACCESS_KEY
          aws_secret_access_key: Dev_AWS_SECRET_ACCESS_KEY
          context: pocket
          env: Dev
          service_name: ImageAPI

      # # Notify sentry of main deployment
      # - pocket/sentry_release_notification:
      #     <<: *only_main
      #     name: image-api_sentry-release-notification-prod
      #     context: pocket
      #     repository_name: Pocket/image-api
      #     sentry_project_name: image-api
      #     sentry_env: production
      #     sentry_org: pocket
      #     requires:
      #       - image-api_deploy_prod

      # # Notify sentry of dev deployment
      # - pocket/sentry_release_notification:
      #     <<: *only_dev
      #     name: image-api_sentry-release-notification-dev
      #     context: pocket
      #     repository_name: Pocket/image-api
      #     sentry_project_name: image-api
      #     sentry_env: development
      #     sentry_org: pocket
      #     requires:
      #       - image-api_deploy_dev
