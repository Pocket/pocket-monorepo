
workflows:
  shared-snowplow-consumer:
    jobs:

      ######
      # Every PR Jobs
      ######

      - test_integrations:
          <<: *not_dev_main
          for: shared_snowplow_consumer
          context: pocket
          name: shared-snowplow-consumer_test_integrations
          scope: shared-snowplow-consumer

      # Try building the ECS docker image on each branch
      - build_image:
          <<: *not_dev_main
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_build_docker
          aws-access-key-id: Dev_AWS_ACCESS_KEY
          aws-secret-access-key: Dev_AWS_SECRET_ACCESS_KEY
          aws-region: Dev_AWS_DEFAULT_REGION
          repo-name: sharedsnowplowconsumer-dev-app
          ecr-url: 410318598490.dkr.ecr.us-east-1.amazonaws.com
          push: false
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=shared-snowplow-consumer --build-arg APP_PATH=servers/shared-snowplow-consumer --build-arg SENTRY_AUTH_TOKEN=${SENTRY_BEARER} --build-arg SENTRY_ORG=pocket --build-arg SENTRY_PROJECT=shared-snowplow-consumer --build-arg PORT=4015 
     
      - infrastructure:
          <<: *not_dev_main
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_infrastructure_plan_prod
          scope: shared-snowplow-consumer-cdk
          stack-output-path: infrastructure/shared-snowplow-consumer/cdktf.out/stacks/shared-snowplow-consumer
          resource-class: pocket/default-prod
          workspace: Prod
          dev: false
          apply: false

      ######
      # Dev Branch Deployment (Dev Environment)
      ######

      - infrastructure:
          <<: *only_dev
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_infrastructure_apply_dev
          scope: shared-snowplow-consumer-cdk
          stack-output-path: infrastructure/shared-snowplow-consumer/cdktf.out/stacks/shared-snowplow-consumer
          resource-class: pocket/default-dev
          workspace: Dev
          apply: true
          dev: true

      # Build & Deploy the Dev Docker Image
      - build_image:
          <<: *only_dev
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_build_docker_dev
          aws-access-key-id: Dev_AWS_ACCESS_KEY
          aws-secret-access-key: Dev_AWS_SECRET_ACCESS_KEY
          aws-region: Dev_AWS_DEFAULT_REGION
          repo-name: sharedsnowplowconsumer-dev-app
          ecr-url: 410318598490.dkr.ecr.us-east-1.amazonaws.com
          push: true
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=shared-snowplow-consumer --build-arg APP_PATH=servers/shared-snowplow-consumer --build-arg SENTRY_AUTH_TOKEN=${SENTRY_BEARER} --build-arg SENTRY_ORG=pocket --build-arg SENTRY_PROJECT=shared-snowplow-consumer --build-arg PORT=4015
          requires:
            - shared-snowplow-consumer_infrastructure_apply_dev

      - code_deploy_ecs:
          <<: *only_dev
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_code_deploy_ecs_dev
          resource-class: pocket/default-dev
          codedeploy-app-name: SharedSnowplowConsumer-Dev-ECS
          codedeploy-group-name: SharedSnowplowConsumer-Dev-ECS
          requires:
            - shared-snowplow-consumer_build_docker_dev

      # Notify sentry of dev deployment
      - sentry_release_notification:
          <<: *only_dev
          name: shared-snowplow-consumer_sentry-release-notification-dev
          context: pocket
          for: shared_snowplow_consumer
          sentry_project_name: shared-snowplow-consumer
          sentry_env: development
          sentry_org: pocket
          requires:
            - shared-snowplow-consumer_code_deploy_ecs_dev
     
      # Setup params we may use in Lambdas
      - setup_deploy_params:
          <<: *only_dev
          name: shared-snowplow-consumer_deploy-params-dev
          aws_access_key_id: Dev_AWS_ACCESS_KEY
          aws_secret_access_key: Dev_AWS_SECRET_ACCESS_KEY
          context: pocket
          env: Dev
          service_name: SharedSnowplowConsumer
          requires:
            - shared-snowplow-consumer_code_deploy_ecs_dev


      ######
      # Main Branch Deployment (Prod Environment)
      ######
      - infrastructure:
          <<: *only_main
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_infrastructure_apply_prod
          scope: shared-snowplow-consumer-cdk
          stack-output-path: infrastructure/shared-snowplow-consumer/cdktf.out/stacks/shared-snowplow-consumer
          resource-class: pocket/default-prod
          workspace: Prod
          apply: true
          dev: false

      # Build & Deploy the Prod Docker Image
      - build_image:
          <<: *only_main
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_build_docker_prod
          aws-access-key-id: Prod_AWS_ACCESS_KEY
          aws-secret-access-key: Prod_AWS_SECRET_ACCESS_KEY
          aws-region: Prod_AWS_DEFAULT_REGION
          repo-name: sharedsnowplowconsumer-prod-app
          ecr-url: 996905175585.dkr.ecr.us-east-1.amazonaws.com
          push: true
          extra-build-args: --build-arg GIT_SHA=${CIRCLE_SHA1} --build-arg SCOPE=shared-snowplow-consumer --build-arg APP_PATH=servers/shared-snowplow-consumer --build-arg SENTRY_AUTH_TOKEN=${SENTRY_BEARER} --build-arg SENTRY_ORG=pocket --build-arg SENTRY_PROJECT=shared-snowplow-consumer --build-arg PORT=4015
          requires:
            - shared-snowplow-consumer_infrastructure_apply_prod

      - code_deploy_ecs:
          <<: *only_main
          context: pocket
          for: shared_snowplow_consumer
          name: shared-snowplow-consumer_code_deploy_ecs_prod
          resource-class: pocket/default-prod
          codedeploy-app-name: SharedSnowplowConsumer-Prod-ECS
          codedeploy-group-name: SharedSnowplowConsumer-Prod-ECS
          requires:
            - shared-snowplow-consumer_build_docker_prod

      # Notify sentry of main deployment
      - sentry_release_notification:
          <<: *only_main
          name: shared-snowplow-consumer_sentry-release-notification-prod
          context: pocket
          for: shared_snowplow_consumer
          sentry_project_name: shared-snowplow-consumer
          sentry_env: production
          sentry_org: pocket
          requires:
            - shared-snowplow-consumer_code_deploy_ecs_prod

      # Setup params we may use in Lambdas
      - setup_deploy_params:
          <<: *only_main
          name: shared-snowplow-consumer_deploy-params-prod
          aws_access_key_id: Prod_AWS_ACCESS_KEY
          aws_secret_access_key: Prod_AWS_SECRET_ACCESS_KEY
          context: pocket
          env: Prod
          service_name: SharedSnowplowConsumer
          requires:
            - shared-snowplow-consumer_code_deploy_ecs_prod
