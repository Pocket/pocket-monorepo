name: 'Re-usable ECS Codedeploy Flow'
description: 'Used to code deploy a docker image'
inputs:
  terraform-output:
    description: 'Output from Terraform in previous step used to get the ECS Service, Task Defintion'
    required: true
  docker-image-name:
    required: true
    description: Docker path/name of the image to deploy

runs:
  using: 'composite'
  steps:  
    - name: Render Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition-family: ${{ fromJSON(inputs.terraform-output).ecs-task-family.value }}
        container-name: ${{ fromJSON(inputs.terraform-output).ecs-task-containerName.value }}
        image: ${{ inputs.docker-image-name }}    
    - name: Render Amazon ECS App Spec
      shell: bash
      run: |
        cat <<EOT >> appspec.json
        {
          "version": 0.0,
          "Resources": [
            {
              "TargetService": {
                "Type": "AWS::ECS::Service",
                "Properties": {
                  "TaskDefinition": "",
                  "LoadBalancerInfo": {
                    "ContainerName": "${{ fromJSON(inputs.terraform-output).ecs-task-containerName.value }}",
                    "ContainerPort": ${{ fromJSON(inputs.terraform-output).ecs-task-containerPort.value }}
                  }
                }
              }
            }
          ]
        }
        EOT
    - name: Deploy to Amazon ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ fromJSON(inputs.terraform-output).ecs-serviceName.value }}
        cluster: ${{ fromJSON(inputs.terraform-output).ecs-clusterName.value }}
        wait-for-service-stability: false
        codedeploy-appspec: appspec.json
        codedeploy-application: ${{ fromJSON(inputs.terraform-output).ecs-codedeploy-app.value }}
        codedeploy-deployment-group: ${{ fromJSON(inputs.terraform-output).ecs-codedeploy-group.value }}