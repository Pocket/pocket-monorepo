name: 'Re-usable Docker Build Flow'
description: 'Used to setup and build a docker image'
inputs:
  scope:
    description: 'Turbo Repo scope to run the build for'
    required: true
  docker-repo-name:
    description: 'Docker name of the repo  <account-id>.dkr.ecr.us-east-1.amazonaws.com/<name>'
    required: true
  app-path:
    description: 'The path of where the application is located in the monorepo ie servers/<app-name>'
    required: true
  context:
    description: 'The path of where to build from'
    required: true
    default: '.'
  app-port:
    description: 'The port the application runs on ie 4006'
    required: true
  sentry-org:
    description: 'The org name used in sentry. Used to upload source maps'
    required: false
    default: pocket
  sentry-project:
    description: 'The project name used in sentry. Used to upload source maps'
    required: true
  sentry-token:
    description: 'The token used for sentry. Used to upload source maps'
    required: true
  push:
    description: Whether or not to push the image
    required: true
    default: 'false'
  dockerhub-username:
    description: Docker hub username
    required: true
  dockerhub-token:
    description: Dockerhub Token
    required: true

outputs:
  docker-image-name:
    description: The full name with registry of the built docker image
    value: ${{ steps.get-build-name.outputs.docker-image-name }}

runs:
  using: 'composite'
  steps:
    # can be useful if you want to add emulation support with QEMU to be able to build against more platforms.
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # action will create and boot a builder using by default the docker-container driver.
    # This is not required but recommended using it to be able to build multi-platform images, export cache, etc.
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-token }}

    - name: Login to Amazon ECR
      if: inputs.push == 'true'
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build docker image
      id: docker-build-push
      uses: docker/build-push-action@v6
      with:
        push: ${{inputs.push}}
        tags: ${{inputs.docker-repo-name}}:${{ github.sha }},latest
        context: ${{ inputs.context }}
        build-args: |
          GIT_SHA=${{ github.sha }}
          SCOPE=${{inputs.scope}}
          APP_PATH=${{inputs.app-path}}
          SENTRY_ORG=${{inputs.sentry-org}} 
          SENTRY_PROJECT=${{inputs.sentry-project}} 
          PORT=${{inputs.app-port}}
        secrets: |
          sentry_token=${{ inputs.sentry-token }}
    - name: Output Build Name
      id: get-build-name
      shell: bash
      run: |
        echo "docker-image-name=${{inputs.docker-repo-name}}:${{ github.sha }}" >> $GITHUB_OUTPUT
