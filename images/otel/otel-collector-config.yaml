# Note this is only built nightly and will take effect on the next deploy after being built.
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317" # gRPC port for receiving traces, metrics, and logs over gRPC
exporters:
  googlecloud:
    log:
      default_log_name: opentelemetry.io/collector-exported-log
  # debug:
  #   verbosity: detailed
processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 65
    spike_limit_percentage: 20
  batch:
  resourcedetection/ecs:
      detectors: [env, ecs]
      timeout: 2s
      override: false
      ecs:
        resource_attributes:
          # These are reserved in GCP, so we need to remove them
          cloud.region:
            enabled: false
          cloud.availability_zone:
            enabled: false
  attributes/cleanup_for_google:
    actions:
      - key: service.namespace
        value: pocket
        action: insert
      - key: g.co/r/generic_node/namespace
        value: "pocket"
        action: insert
        
service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resourcedetection/ecs, attributes/cleanup_for_google, memory_limiter, batch]
      exporters: [googlecloud]
    metrics:
      receivers: [otlp]
      processors: [resourcedetection/ecs, attributes/cleanup_for_google, memory_limiter, batch]
      # Disabling for now. They get dropped based on intervals in GCP. More research is required.
      # exporters: [googlecloud]
    logs:
      receivers: [otlp]
      processors: [resourcedetection/ecs, attributes/cleanup_for_google, memory_limiter, batch]
      exporters: [googlecloud]